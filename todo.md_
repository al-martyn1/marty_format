# Список задач

#!insert{no-fail,doc,raise=-1} md_/reference_specs.md_

## README

Описание библиотеки - [README](README.md_).


## Задачи

- [ ] Для поддержки STM32 (и подобной встройки) сделать опциональным использование UTF-8 (и все зависимости от marty_utf).

- [ ] Для поддержки STM32 сделать опциональным использование `marty::Decimal`.

- [ ] Для поддержки STM32 отвязаться от явного использования `std::string` и дать возможность пользователю использовать свой тип строк.

- [X] Сделать при разборе форматной строки поддержку всех фич форматной строки как `C++`, так и `Python`.
      Некоторые фичи можно игнорировать при форматировании, но форматная строка должна быть совместима 
      и готова к копированию без изменений из указанных языков.

- [X] Добавить в "поля замены" поддержку преобразования (conversion), 
      см. [тут](https://docs.python.org/3/library/string.html#format-string-syntax).
      Надо продумать, не надо ли явно делать также преобразования в int/float, или
      это будет делаться автоматически.

- [ ] Надо обдумать при выводе, в зависимости от символа формата - делается ли автоматическое
      преобразование, или выкидывается исключение. Так, например, в форматной строке у нас символ
      `d`, а в аргументе задано число с плавающей точкой - как быть в этом случае?

- [X] Надо добавить возможность символ заполнения задавать не явно в форматной строке,
      а ссылкой на аргумент в фигурных скобках `{}`.

- [X] Символ знака - не сделана поддержка пробела (вроде бы, надо проверить).

- [ ] Разобраться с форматным символом `z`.

- [X] `umba-md-pp` - пока тут запишу - надо добавить конструкцию для форматирования списка аргументов, полей структуры,
      элементов перечислений, и тд. Сейчас имя я выделяю болдом, через дефис пишу описание, и всё. Но лучше бы это в 
      таблицу обормить, но таблицы не удобно заполнять. Надо подумать, как это сделать попроще.
      Запилил тэги `arg-list` и `val-list` - один для описания аргументов функций, другой - для описания списков значений
      (например, элементов перечислений). Они работают идентично, но настраиваються глобально отдельно.
      Поддерживают атрибуты:
      `title` - разделённый пайпом список элементов заголовка;
      `type` - тип отображения, может быть `text` или `table`;
      `value-style` - стиль оформления значений (первая колонка таблицы в табличном отображении), может быть dold, italic, и тп.

- [X] `umba-md-pp` - добавить стили для `arg-list` и `val-list` - стиль задаёт все три атрибута данных тэгов.

#// - [ ]


## Баги

- [ ] "Примеры использования форматной строки" - "Alignment names indirect taken" - почему-то не работает выравнивание 
      по правому краю и по центру, а в дефолтном варианте не выдержана ширина поля.
      Похоже, это от того, что в качестве символа заполнения в примере выбран символ `'$'` - он позже получил нагрузку - 
      форматирование валюты. Надо фиксить пример, сама библиотека не виновата.


#// Тестим ссылки - [Возможности библиотеки](#возможности-библиотеки),
#// [Возможности библиотеки](#Возможности библиотеки)