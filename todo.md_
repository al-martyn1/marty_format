# Список задач

#!insert{no-fail,doc,raise=-1} md_/reference_specs.md_

## README

Описание библиотеки - [README](README.md_).


## Задачи

- [ ] Для поддержки STM32 (и подобной встройки) сделать опциональным использование UTF-8 (и все зависимости от marty_utf).

- [ ] Для поддержки STM32 сделать опциональным использование `marty::Decimal`.

- [ ] Для поддержки STM32 отвязаться от явного использования `std::string` и дать возможность пользователю использовать свой тип строк.

- [ ] Сделать при разборе форматной строки поддержку всех фич форматной строки как `C++`, так и `Python`.
      Некоторые фичи можно игнорировать при форматировании, но форматная строка должна быть совместима 
      и готова к копированию без изменений из указанных языков.

- [ ] Добавить в "поля замены" поддержку преобразования (conversion), 
      см. [тут](https://docs.python.org/3/library/string.html#format-string-syntax).
      Надо продумать, не надо ли явно делать также преобразования в int/float, или
      это будет делаться автоматически.

- [ ] Надо обдумать при выводе, в зависимости от символа формата - делается ли автоматическое
      преобразование, или выкидывается исключение. Так, например, в форматной строке у нас символ
      `d`, а в аргументе задано число с плавающей точкой - как быть в этом случае?

- [ ] Надо добавить возможность символ заполнения задавать не явно в форматной строке,
      а ссылкой на аргумент в фигурных скобках `{}`.

- [ ] Символ знака - не сделана поддержка пробела (вроде бы, надо проверить).

- [ ] Разобраться с форматным символом `z`.

#// - [ ]

