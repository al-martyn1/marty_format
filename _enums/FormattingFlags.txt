// Option flags for `marty::format::formatMessage` functions family

unknown,invalid             = -1   // !
none                        = 0
ignoreFormatStringErrors    = 1    // Ignore errors in format string
ignoreArgumentErrors               // Ignore errors while searching for arguments
ignoreFormattingErrors             // Ignore errors while formatting values
ignoreFillIndirectErrors           // Ignore errors while searching for arguments for fill char
ignoreWidthIndirectErrors          // Ignore errors while searching for arguments for width
ignorePrecisionIndirectErrors      // Ignore errors while searching for arguments for precision
ignoreConversionErrors             // Ignore formatting type specifications and allow automatic type conversion
ignoreTypeMismatchErrors           // Ignore formatting type specification char mismatch errors
ignoreNotFilterErrors              // Ignore errors - non-filter value used as filter

considerZeroWidthSpaces            // Consider zero-width spaces
# Учитывать пробелы нулевой ширины

considerCombiningChars             // Consider combining Unicode chars
# Учитывать комбинированные символы

fractionalGroupping                // Group fractional part (floating point numbers) same as integer part
# Группировка цифр также и в дробной части числа, если разделитель разрядов задан для целой части числа

ignoreOptionsIndirectErrors = ignoreFillIndirectErrors | ignoreWidthIndirectErrors | ignorePrecisionIndirectErrors // Ignore errors in indirect options
ignoreErrors                = ignoreFormatStringErrors | ignoreArgumentErrors | ignoreFormattingErrors | ignoreOptionsIndirectErrors | ignoreConversionErrors | ignoreNotFilterErrors | ignoreTypeMismatchErrors // Ignore all errors
considerUnicodeFeatures     = considerZeroWidthSpaces  | considerCombiningChars // Consider options

allBase = ignoreErrors | considerUnicodeFeatures   // All, but no fractional groupping
all     = allBase | fractionalGroupping            // All

localeForceCustom                                  // Force use passed locale
localeUseSystem                                    // Use system locale instead of user



