# Примеры использования

Все примеры используют стандартный тип аргумента `marty::format::FormatArgumentVariant`.
При необходимости пользователь может создать свой аналогичный тип и использовать его.


## Используем std::initializer_list

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#UsingInitializerList

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#UsingInitializerList


## Используем std::vector

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#UsingFlatVector

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#UsingFlatVector


## Используем marty::format::Args

**Код:**
#!snippet{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#UsingArgs

**Вывод:**
#!snippet{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#UsingArgs


## Используем marty::format::Args с именоваными параметрами

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#UsingNamedArgs

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#UsingNamedArgs


## Используем std::vector с парами std::pair<std::string, FormatArgumentVariant>

Использование вектора с парами, шде первый элемент строка, а второй - `marty::format::FormatArgumentVariant` 
аналогично использованию `marty::format::Args`,
но поиск по имени каждый раз производится перебором от начала вектора. Не слишком эффективно, но работает без лишних сущностей.

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#UsingVectorOfNameValuePairs

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#UsingVectorOfNameValuePairs


## Задаём конвертацию аргумента, также символ заполнения передаём аргументом

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#UsingFillRefAndConvert

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#UsingFillRefAndConvert


## Вывод строк с различной шириной и точностью

При выводе используем как непосредственное задание символа выравнивания, ширины и точности, так и косвенное.

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#StringWidthPrecision01

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#StringWidthPrecision01


## Вывод булевых значений

Также выводим целые числа как булевы значения.

**Код:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#FormattingBool

**Вывод:**
#!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#FormattingBool


#// ## Используем 

#// **Код:**
#// #!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/example_02.cpp#
#// 
#// **Вывод:**
#// #!insert{trim,nolineno,noKeepCutTags,no-filename,no-path,no-filename-line-no} examples/../samples_output.txt#


