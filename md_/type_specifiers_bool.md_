# Спецификаторы представления типа bool

При форматировании значений типа `bool` в строковом представлении
форматирование осуществляется в соответствии с правилами форматирования строк.

При форматировании значений типа `bool` в целочисленном представлении
форматирование осуществляется в соответствии с правилами форматирования целых чисел.


## Опции форматирования, влияющие на отображение bool в строковом виде

<val-list value-style=backtick-quote>

-!
Инверсия регистра - меняет регистр первого символа строкового представления
булевой переменной на противоположный: 'True', 'fALSE'.

-#
Альтернативное отображение - отображение `bool` в виде одного символа, соответствует заданию точности в 1 символ.

</val-list>


## Спецификаторы

<val-list value-style=backtick title=":Спецификатор|:Язык|:Описание">

-none
`C++`
Аналогично `'s'`.

-'s'
`C++`
Отображает значение в виде строки `'true'`/`'false'` в нижнем регистре.

-'S'
`-`
Отображает значение в виде строки `'TRUE'`/`'FALSE'` в верхнем регистре.

-'t'
`-`
Для булевых значений работает аналогично `'s'`. 
Для целочисленных значений принудительно отображает целое число как `bool` в формате `'s'`.

-'T'
`-`
Для булевых значений работает аналогично `'S'`. 
Для целочисленных значений принудительно отображает целое число как `bool` в формате `'S'`.

-'y'
`-`
Для булевых значений работает аналогично `'s'`, но используются строковые значения `'yes'`/`'no'`. 
Для целочисленных значений принудительно отображает целое число как `bool` в формате `'y'`.

-'Y'
`-`
Для булевых значений работает аналогично `'S'`, но используются строковые значения `'YES'`/`'NO'`. 
Для целочисленных значений принудительно отображает целое число как `bool` в формате `'Y'`.

</val-list>


## Спецификаторы целых чисел для представления типа bool

Для отображения `bool` значений в виде целого числа можно использовать любой и спецификаторов
форматирования целых чисел, при этом целочисленное значение `0` будет трактоваться, как `false`,
а любое другое значение будет трактоваться, как `true`.

