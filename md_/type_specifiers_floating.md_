# Спецификаторы представления типов с плавающей точкой

<val-list value-style=backtick title=":Спецификатор|:Язык|:Описание">
-none
`Py`/`C++`
Аналогично `'f'`.

-'a'
`C++`
Шестнадцатиричное представление чисел с плавающей точкой.

-'A'
`C++`
Шестнадцатиричное представление чисел с плавающей точкой.

-'d'
`Py`
Десятичное число (аналогично `'f'`)

-'e'
`Py`/`C++`
Научная запись. Для заданной точности `precision` форматирует число в научной записи с буквой `'e'`,
разделяющей коэффициент от показателя степени. Коэффициент имеет одну цифру до и `precision` цифр после 
десятичной точки, всего `precision` + 1 значащих цифр. Если точность не указана, 
использует точность 6 цифр после десятичной точки для float и показывает все цифры коэффициента для Decimal.
Если `precision`=0, десятичная точка опускается, если не используется опция `'#'`.

-'E'
`Py`/`C++`
Научная запись. То же, что и `'e'`, но в качестве разделительного символа используется заглавная `'E'`.

-'f'
`Py`/`C++`
Нотация с фиксированной точкой. Для заданной точности p форматирует число как десятичное число с ровно 
`precision` цифрами после десятичной точки. Если точность не указана, использует точность 6 цифр после 
десятичной точки для float и использует точность, достаточную для отображения всех цифр коэффициентов 
для Decimal. Если p=0, десятичная точка опускается, если не используется опция `'#'`.

-'F'
`Py`/`C++`
Нотация с фиксированной точкой. То же, что и `'f'`, но преобразует `nan` в `'NAN'` и `inf` в `'INF'`.

-'g'
`Py`/`C++`
Общий формат. Для заданной точности p >= 1 это округляет число до p значащих цифр, а затем форматирует 
результат либо в формате с фиксированной точкой, либо в экспоненциальном формате, в зависимости от его величины. 
Точность 0 рассматривается как эквивалент точности 1.

Точные правила следующие: предположим, что результат, отформатированный с типом представления 'e' и точностью p-1,
будет иметь показатель степени exp. Тогда, если m <= exp < p, где m равно -4 для чисел с плавающей точкой и -6 для 
десятичных чисел, число форматируется с типом представления 'f' и точностью p-1-exp. В противном случае число 
форматируется с типом представления 'e' и точностью p-1. В обоих случаях незначащие конечные нули удаляются из 
значащей части, а десятичная точка также удаляется, если после нее не осталось цифр, если только не используется опция '#'.

Если точность не указана, используется точность 6 значащих цифр для чисел с плавающей точкой. Для десятичных 
чисел коэффициент результата формируется из цифр коэффициента значения; для значений, меньших 1e-6 по абсолютной 
величине, и значений, где разрядное значение младшей значащей цифры больше 1, используется экспоненциальное 
обозначение, в противном случае используется обозначение с фиксированной точкой.

Положительная и отрицательная бесконечность, положительный и отрицательный ноль и nan форматируются как 
inf, -inf, 0, -0 и nan соответственно, независимо от точности.

-'G'
`Py`/`C++`
Общий формат. То же, что и «g», за исключением переключения на «E», если число становится слишком большим.
Представления бесконечности и NaN также записываются заглавными буквами.

-'n'
`Py`
Десятичное число. Аналогично форматному символу `'d'` с `C++` опцией `'L'`. Форматирует число с 
использованием символа разделителя разрядов, заданного системной локалью.

-'%'
`Py`
Производит вывод в формате процентов, умножая исходное число на `100.0`.

-'$'
`-`
Производит вывод в формате валюты. Для обозначения валюты используется символ `'$'` или локальный символ валюты.

#// -''
#// `Py`/`C++`
</val-list>


**Примечание**. Десятичные числа с произвольной размерностью `marty::Decimal`
в режиме форматирования обычного числа с плавающей точкой (`'f'`/`'F'`) форматируются как есть,
в других режимах форматирование производится стандартными средствами `C++` через преобразование
в `long double`.
