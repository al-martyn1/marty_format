# Библиотека форматирования marty::format

Библиотека форматирования в стиле `Python` / `C++` `std::format`.

Библиотека не претендует на высокое качество кода, также не претендует на высокую производительность.

Библиотека предназначена для использования в самодельных скриптовых языках и в языках описания 
прикладных данных (DSL - Domain Specific Language).

Как бонус, существует возможность использования библиотеки вместо `std::format` при помощи `std::initializer_list`.

Не пинайте ~~пианиста~~программиста, он ~~играет~~пишет, как умеет.

Замечания, предложения, фиксы - приветствуются.

Ограничений на использование библиотеки нет. Требуется только указывать авторство.


## Возможности библиотеки

1. Добавление возможностей `C++` `std::format` из `C++20` в `C++17` (бэкпорт новых фич в старый стандарт).
2. Совместимость форматной строки с форматной строкой языков `Python` и `C++`. 
   Некоторые возможности этих языков игнорируются, но не вызывают ошибки при разборе
   форматной строки. В библиотеке совмещены возможности форматирования из языка `Python` и возможности 
   форматирования `C++20` `std::format`.
3. Поддержка именованных аргументов для `C++` при использовании соответствующих контейнеров для аргументов.
4. Поддержка передачи аргументов через std::initializer_list.
4. Упор на использование библиотеки в своих скриптовых языках/DSL языках.
5. Поддержка Unicode в кодировке UTF-8.
6. Поддержка чисел с плавающей точкой произвольной размерности `marty::Decimal`.
7. Поддержка пользовательских типов строк взамен `std::string` и поддержка микроконтроллеров (`STM32`, как пример).
   Пока не реализовано, но весьма ready, требует отключения части кода условными макросами, также требуется модифицировать некоторые части.


#!toc



#!insert{no-fail,doc,raise=-1} md_/reference_specs.md_

#!insert{no-fail,doc,raise=-1} md_/format_spec.md_


## Список задач

Список задач по библиотеке - [TODO](todo.md_).


